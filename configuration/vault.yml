---
- name: Install Vault Binary - Local
  block:
    - name: Copy local binary to remote
      copy:
        src: "{{local_enterprise_binary_dir}}/vault"
        dest: "{{install_dir}}"
        owner: "{{install_owner}}"
        group: "{{install_group}}"
        mode: +x
  when: local_binaries
- name: Install Vault Binary - Remote
  block:
    - name: Get latest vault binary location
      local_action: command python ./get_enterprise_url.py -p vault
      become: no
      register: latest_vault
    - name: Download vault
      get_url:
        url: "{{latest_vault.stdout}}"
        dest: /tmp/vault.zip
    - name: Unzip vault and put in path
      unarchive:
        src: /tmp/vault.zip
        dest: "{{install_dir}}"
        mode: +x      
        owner: "{{install_owner}}"
        group: "{{install_group}}"
        remote_src: yes
        # force: yes
  when: not local_binaries

- name: Check if Vault is present before proceeding
  command: "{{install_dir}}/vault -v"
  register: vault_v
- name: Print Vault version
  debug:
    var: vault_v.stdout

# configure systemd and vault config
- name: Add the user 'vault'
  user:
    name: vault
    comment: Create a unique non privileged system user to run vault
    system: yes
    home: "{{vault_config_dir}}"
    shell: /bin/false
- name: Create config directory
  file:
    path: "{{vault_config_dir}}"
    state: directory
    owner: vault
    group: vault

- name: Create Vault server systemd service file 
  template:
    src: vault.service.j2
    dest: "{{systemd_dir}}/vault.service"
    owner: vault
    group: vault
# Do not create the vault config in the image
# - name: Create Vault config 
#   template:
#     src: vault.hcl.j2
#     dest: "{{vault_config_dir}}/vault.hcl"
#     owner: vault
#     group: vault
#     mode: 0640

- name: Check on Vault server service
  systemd:
    name: vault.service
    state: stopped
    enabled: no
